// Code generated by protoc-gen-go.
// source: foamPocket.proto
// DO NOT EDIT!

/*
Package pocket is a generated protocol buffer package.

It is generated from these files:
	foamPocket.proto

It has these top-level messages:
	Pocket
	Output
	TXMap
	TxFeeInfo
	PointInfo
	PointKind
	QueryResult
*/
package pocket

import proto "github.com/hyperledger-coin/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Pocket struct {
	Addr    string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Balance int64  `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	Pubkey  string `protobuf:"bytes,3,opt,name=pubkey" json:"pubkey,omitempty"`
}

func (m *Pocket) Reset()                    { *m = Pocket{} }
func (m *Pocket) String() string            { return proto.CompactTextString(m) }
func (*Pocket) ProtoMessage()               {}
func (*Pocket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Pocket) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Pocket) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Pocket) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type Output struct {
	OutputAddr  string `protobuf:"bytes,4,opt,name=outputAddr" json:"outputAddr,omitempty"`
	OutputValue int64  `protobuf:"varint,5,opt,name=outputValue" json:"outputValue,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Output) GetOutputAddr() string {
	if m != nil {
		return m.OutputAddr
	}
	return ""
}

func (m *Output) GetOutputValue() int64 {
	if m != nil {
		return m.OutputValue
	}
	return 0
}

// 需要格外注意，每个addr只能读取一次
type TXMap struct {
	// the string is input addr
	TxMap     map[string]*TXMap_TX `protobuf:"bytes,1,rep,name=txMap" json:"txMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp int64                `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Founder   string               `protobuf:"bytes,3,opt,name=founder" json:"founder,omitempty"`
}

func (m *TXMap) Reset()                    { *m = TXMap{} }
func (m *TXMap) String() string            { return proto.CompactTextString(m) }
func (*TXMap) ProtoMessage()               {}
func (*TXMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TXMap) GetTxMap() map[string]*TXMap_TX {
	if m != nil {
		return m.TxMap
	}
	return nil
}

func (m *TXMap) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TXMap) GetFounder() string {
	if m != nil {
		return m.Founder
	}
	return ""
}

type TXMap_TX struct {
	Timestamp    int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	InputAddr    string `protobuf:"bytes,2,opt,name=inputAddr" json:"inputAddr,omitempty"`
	InputBalance int64  `protobuf:"varint,3,opt,name=inputBalance" json:"inputBalance,omitempty"`
	Nounce       int64  `protobuf:"varint,4,opt,name=nounce" json:"nounce,omitempty"`
	// 需要处理output addr重复问题
	Output []*Output `protobuf:"bytes,5,rep,name=output" json:"output,omitempty"`
	Script string    `protobuf:"bytes,6,opt,name=script" json:"script,omitempty"`
	Fee    int64     `protobuf:"varint,7,opt,name=fee" json:"fee,omitempty"`
}

func (m *TXMap_TX) Reset()                    { *m = TXMap_TX{} }
func (m *TXMap_TX) String() string            { return proto.CompactTextString(m) }
func (*TXMap_TX) ProtoMessage()               {}
func (*TXMap_TX) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *TXMap_TX) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TXMap_TX) GetInputAddr() string {
	if m != nil {
		return m.InputAddr
	}
	return ""
}

func (m *TXMap_TX) GetInputBalance() int64 {
	if m != nil {
		return m.InputBalance
	}
	return 0
}

func (m *TXMap_TX) GetNounce() int64 {
	if m != nil {
		return m.Nounce
	}
	return 0
}

func (m *TXMap_TX) GetOutput() []*Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *TXMap_TX) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *TXMap_TX) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

type TxFeeInfo struct {
	TxFeeAddr string `protobuf:"bytes,1,opt,name=txFeeAddr" json:"txFeeAddr,omitempty"`
	Ratio     int64  `protobuf:"varint,2,opt,name=ratio" json:"ratio,omitempty"`
}

func (m *TxFeeInfo) Reset()                    { *m = TxFeeInfo{} }
func (m *TxFeeInfo) String() string            { return proto.CompactTextString(m) }
func (*TxFeeInfo) ProtoMessage()               {}
func (*TxFeeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TxFeeInfo) GetTxFeeAddr() string {
	if m != nil {
		return m.TxFeeAddr
	}
	return ""
}

func (m *TxFeeInfo) GetRatio() int64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

type PointInfo struct {
	AccountTotal int64  `protobuf:"varint,1,opt,name=accountTotal" json:"accountTotal,omitempty"`
	TxTotal      int64  `protobuf:"varint,2,opt,name=txTotal" json:"txTotal,omitempty"`
	PointTotal   int64  `protobuf:"varint,3,opt,name=pointTotal" json:"pointTotal,omitempty"`
	Holder       string `protobuf:"bytes,4,opt,name=holder" json:"holder,omitempty"`
}

func (m *PointInfo) Reset()                    { *m = PointInfo{} }
func (m *PointInfo) String() string            { return proto.CompactTextString(m) }
func (*PointInfo) ProtoMessage()               {}
func (*PointInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PointInfo) GetAccountTotal() int64 {
	if m != nil {
		return m.AccountTotal
	}
	return 0
}

func (m *PointInfo) GetTxTotal() int64 {
	if m != nil {
		return m.TxTotal
	}
	return 0
}

func (m *PointInfo) GetPointTotal() int64 {
	if m != nil {
		return m.PointTotal
	}
	return 0
}

func (m *PointInfo) GetHolder() string {
	if m != nil {
		return m.Holder
	}
	return ""
}

type PointKind struct {
	Kind []string `protobuf:"bytes,1,rep,name=kind" json:"kind,omitempty"`
}

func (m *PointKind) Reset()                    { *m = PointKind{} }
func (m *PointKind) String() string            { return proto.CompactTextString(m) }
func (*PointKind) ProtoMessage()               {}
func (*PointKind) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PointKind) GetKind() []string {
	if m != nil {
		return m.Kind
	}
	return nil
}

type QueryResult struct {
	Nounce  int64 `protobuf:"varint,1,opt,name=nounce" json:"nounce,omitempty"`
	Balance int64 `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryResult) GetNounce() int64 {
	if m != nil {
		return m.Nounce
	}
	return 0
}

func (m *QueryResult) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*Pocket)(nil), "pocket.Pocket")
	proto.RegisterType((*Output)(nil), "pocket.Output")
	proto.RegisterType((*TXMap)(nil), "pocket.TXMap")
	proto.RegisterType((*TXMap_TX)(nil), "pocket.TXMap.TX")
	proto.RegisterType((*TxFeeInfo)(nil), "pocket.TxFeeInfo")
	proto.RegisterType((*PointInfo)(nil), "pocket.PointInfo")
	proto.RegisterType((*PointKind)(nil), "pocket.PointKind")
	proto.RegisterType((*QueryResult)(nil), "pocket.QueryResult")
}

func init() { proto.RegisterFile("foamPocket.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x53, 0xc1, 0x8a, 0xdb, 0x30,
	0x10, 0xc5, 0x71, 0xec, 0xc5, 0x93, 0xa5, 0x04, 0x51, 0x8a, 0x58, 0x96, 0x36, 0xe8, 0xb0, 0xe4,
	0x94, 0xc3, 0xf6, 0x52, 0x7a, 0x59, 0xb6, 0xd0, 0x42, 0xb7, 0x6c, 0xbb, 0x35, 0xa6, 0xe4, 0xaa,
	0xd8, 0x0a, 0x35, 0x71, 0x24, 0xe1, 0x48, 0x25, 0x39, 0xf6, 0xde, 0x6f, 0xeb, 0x37, 0x95, 0x19,
	0x29, 0x38, 0x59, 0xe8, 0x6d, 0xde, 0x7b, 0x9a, 0x61, 0xe6, 0xcd, 0x08, 0xa6, 0x6b, 0x23, 0xb7,
	0x4f, 0xa6, 0xde, 0x28, 0xb7, 0xb0, 0xbd, 0x71, 0x86, 0xe5, 0x96, 0x90, 0xf8, 0x0a, 0x79, 0xe0,
	0x19, 0x83, 0xb1, 0x6c, 0x9a, 0x9e, 0x27, 0xb3, 0x64, 0x5e, 0x94, 0x14, 0x33, 0x0e, 0x17, 0x2b,
	0xd9, 0x49, 0x5d, 0x2b, 0x3e, 0x9a, 0x25, 0xf3, 0xb4, 0x3c, 0x42, 0xf6, 0x0a, 0x72, 0xeb, 0x57,
	0x1b, 0x75, 0xe0, 0x29, 0xbd, 0x8f, 0x48, 0x3c, 0x40, 0xfe, 0xcd, 0x3b, 0xeb, 0x1d, 0x7b, 0x0d,
	0x60, 0x28, 0xba, 0xc7, 0xaa, 0x63, 0x7a, 0x75, 0xc2, 0xb0, 0x19, 0x4c, 0x02, 0xfa, 0x21, 0x3b,
	0xaf, 0x78, 0x46, 0xf5, 0x4f, 0x29, 0xf1, 0x27, 0x85, 0xac, 0x5a, 0x3e, 0x4a, 0xcb, 0x16, 0x90,
	0xb9, 0xfd, 0xa3, 0xb4, 0x3c, 0x99, 0xa5, 0xf3, 0xc9, 0x2d, 0x5f, 0x84, 0xee, 0x17, 0xa4, 0x2e,
	0x2a, 0x94, 0x3e, 0x6a, 0xd7, 0x1f, 0xca, 0xf0, 0x8c, 0x5d, 0x43, 0xe1, 0xda, 0xad, 0xda, 0x39,
	0xb9, 0xb5, 0xb1, 0xf3, 0x81, 0xc0, 0xa9, 0xd6, 0xc6, 0xeb, 0x46, 0xf5, 0xb1, 0xf9, 0x23, 0xbc,
	0xfa, 0x9b, 0xc0, 0xa8, 0x5a, 0x9e, 0xa7, 0x27, 0xcf, 0xd3, 0xaf, 0xa1, 0x68, 0xf5, 0x71, 0xae,
	0x11, 0x15, 0x18, 0x08, 0x26, 0xe0, 0x92, 0xc0, 0x87, 0xe8, 0x5b, 0x4a, 0xe9, 0x67, 0x1c, 0x9a,
	0xa7, 0x8d, 0x47, 0x75, 0x4c, 0x6a, 0x44, 0xec, 0x06, 0xf2, 0x30, 0x3f, 0xcf, 0x68, 0xce, 0x17,
	0xc7, 0x39, 0x83, 0xa5, 0x65, 0x54, 0x31, 0x7f, 0x57, 0xf7, 0xad, 0x75, 0x3c, 0x0f, 0xe6, 0x07,
	0xc4, 0xa6, 0x90, 0xae, 0x95, 0xe2, 0x17, 0x54, 0x14, 0xc3, 0xab, 0x07, 0x80, 0xc1, 0x1d, 0xd4,
	0x71, 0x63, 0x61, 0xc3, 0x18, 0xb2, 0x1b, 0xc8, 0x7e, 0x91, 0xfd, 0x38, 0xc7, 0xe4, 0x76, 0xfa,
	0xcc, 0xd8, 0x65, 0x19, 0xe4, 0xf7, 0xa3, 0x77, 0x89, 0xb8, 0x83, 0xa2, 0xda, 0x7f, 0x52, 0xea,
	0xb3, 0x5e, 0x1b, 0xb2, 0x08, 0xc1, 0xfd, 0x70, 0x32, 0x03, 0xc1, 0x5e, 0x42, 0xd6, 0x4b, 0xd7,
	0x9a, 0xe8, 0x7d, 0x00, 0xe2, 0x77, 0x02, 0xc5, 0x93, 0x69, 0xb5, 0xa3, 0x0a, 0x02, 0x2e, 0x65,
	0x5d, 0x1b, 0xaf, 0x5d, 0x65, 0x9c, 0xec, 0xa2, 0xcf, 0x67, 0x1c, 0x6e, 0xca, 0xed, 0x83, 0x1c,
	0xef, 0x2f, 0x42, 0xbc, 0x2e, 0x8b, 0xa5, 0x82, 0x18, 0x4c, 0x3e, 0x61, 0xd0, 0xa2, 0x9f, 0xa6,
	0xc3, 0x15, 0x87, 0xcb, 0x8b, 0x48, 0xbc, 0x89, 0x2d, 0x7c, 0x69, 0x75, 0x83, 0x27, 0xbf, 0x69,
	0x75, 0x43, 0x57, 0x55, 0x94, 0x14, 0x8b, 0x3b, 0x98, 0x7c, 0xf7, 0xaa, 0x3f, 0x94, 0x6a, 0xe7,
	0x3b, 0x77, 0xb2, 0xaa, 0xe4, 0x6c, 0x55, 0xff, 0xfd, 0x19, 0xab, 0x9c, 0x3e, 0xd8, 0xdb, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x6d, 0x2c, 0x9c, 0x74, 0x03, 0x00, 0x00,
}
